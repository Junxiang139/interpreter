(+ 1 2)
(+ 1.0 2.0)
(+ 1 2.0)
(/ 3 4)
(+ 123/345 456/567)
(+ 1.0 123/456)
(- 1.23645 0.23645)
(* 200.2 200.2)
(+ (/ 3 13) (/ 5.0 13))
(+ 2 5 6)
(/ (/ 3 4) (/ 5 6))
(+ (/ 3 4) (/ 1 4))
(= 0 1)
(define a 3)
(define b (+ a 1))
(if (and (> b a) (< b (* a b)))
     b
     a)
(cond ((= a 4) 6)
      ((= b 4) (+ 6 7 a))
      (else 25))
(* (cond ((> a b) a)
         ((< a b) b)
         (else -1))
   (+ a 1))
(define (expt1 b n)
  (if (= n 0)
      1
      (* b (expt1 b (- n 1)))))
(define (expt2 b n)
  (expt-iter b n 1))
(define (expt-iter b counter product)
  (if (= counter 0)
      product
      (expt-iter b
                 (- counter 1)
                 (* b product))))
(define (square x) (* x x))
(define (fast-expt1 b n)
  (cond ((= n 0) 1)
        ((even1? n) (square (fast-expt1 b (/ n 2))))
        (else (* b (fast-expt1 b (- n 1))))))
(define (even1? n)
  (= (modulo n 2) 0))
(modulo 100 27)